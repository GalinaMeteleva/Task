package by.tc.task01.main;

import static by.tc.task01.entity.criteria.SearchCriteria.*;
import by.tc.task01.entity.Appliance;
import by.tc.task01.entity.criteria.Criteria;
import by.tc.task01.service.ApplianceService;
import by.tc.task01.service.ServiceFactory;

public class Main {
	
	public static void main(String[]args )  {
		Appliance appliance;
		
		ServiceFactory factory = ServiceFactory.getInstance();
		ApplianceService service = factory.getApplianceService();
		
		Criteria criteriaOven = new Criteria (Oven.class.getSimpleName());
		criteriaOven.add(Oven.CAPACITY.toString(), 33);
		criteriaOven.add(Oven.HEIGHT.toString(), 45);
		criteriaOven.add(Oven.DEPTH.toString(), 60);
		appliance = service.find(criteriaOven);
		PrintApplianceInfo.print(appliance);
		
		Criteria criteriaLaptop = new Criteria(Laptop.class.getSimpleName());
		criteriaLaptop.add(Laptop.OS.toString(), "Linux");
		criteriaLaptop.add(Laptop.MEMORY_ROM.toString(), 6000);
		criteriaLaptop.add(Laptop.DISPLAY_INCHES.toString(), 19);
		appliance = service.find(criteriaLaptop);
		PrintApplianceInfo.print(appliance);
		
		Criteria criteriaRefrigerator = new Criteria(Refrigerator.class.getSimpleName());
		criteriaRefrigerator.add(Refrigerator.FREEZER_CAPACITY.toString(), 10);
		criteriaRefrigerator.add(Refrigerator.OVERALL_CAPACITY.toString(), 300);
		criteriaRefrigerator.add(Refrigerator.HEIGHT.toString(), 200);
		appliance = service.find(criteriaRefrigerator);
		PrintApplianceInfo.print(appliance);
		
		Criteria criteriaSpeakers = new Criteria(Speakers.class.getSimpleName());
		criteriaSpeakers.add(Speakers.NUMBER_OF_SPEAKERS.toString(), 3);
		criteriaSpeakers.add(Speakers.FREQUENCY_RANGE.toString(), 3-4);
		criteriaSpeakers.add(Speakers.CORD_LENGTH.toString(), 3);
		appliance = service.find(criteriaSpeakers);
		PrintApplianceInfo.print(appliance);
		
		Criteria criteriaTabletPC = new Criteria (TabletPC.class.getSimpleName());
		criteriaTabletPC.add(TabletPC.COLOR.toString(), "BLUE");
		criteriaTabletPC.add(TabletPC.DISPLAY_INCHES.toString(), 14);
		criteriaTabletPC.add(TabletPC.MEMORY_ROM.toString(), 4);
		appliance = service.find(criteriaTabletPC);
		PrintApplianceInfo.print(appliance);
		
		Criteria criteriaVacuumCleaner = new Criteria (VacuumCleaner.class.getSimpleName());
		criteriaVacuumCleaner.add(VacuumCleaner.BAG_TYPE.toString(), "KXD0");
		criteriaVacuumCleaner.add(VacuumCleaner.FILTER_TYPE.toString(), "C");
		criteriaVacuumCleaner.add(VacuumCleaner.CLEANING_WIDTH.toString(), 30);
		appliance = service.find(criteriaVacuumCleaner);
		PrintApplianceInfo.print(appliance);
	}
}
